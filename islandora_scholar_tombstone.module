<?php

/**
 * @file
 * Short file description here.
 *
 * Long description here.
 */


/*
 * Looking for if the:
 * Any file datastream isn't
 *  - MODS
 *  - PDF
 *  - Supple# optional with no impact on this feature.
 */

/**
 * Implements hook_menu().
 */
function islandora_scholar_tombstone_menu()
{
    $items = array();
    $items['admin/settings/islandora_scholar_tombstone'] = array(
        'title' => 'On this date module settings',
        'description' => 'Description of your On this date settings page',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('islandora_scholar_tombstone'),
        'access arguments' => array('Administer site configuration'),
        'file' => 'islandora_scholar_tombstone.inc',
    );
    return $items;
}

/**
 * Implements hook_help().
 */
function islandora_scholar_tombstone_help($path, $arg)
{
    switch ($path) {
    case 'admin/help#islandora_scholar_tombstone':
      // Return a line-break version of the README.
      $readme = file_get_contents(drupal_get_path('module', 'islandora_scholar_tombstone') . '/README.txt');
      return nl2br($readme);
  }
}

/**
 * Page example callback, referenced in hook_menu().
 *
 * Description of what the page displays.
 * Second line of the description.
 *
 * @return string
 *   The content of the page.
 */
function islandora_scholar_tombstone_page()
{
    return 'Fishes';
}

/**
 * Implements hook_page_build().
 *
 * Add JavaScript and CSS code to every page.
 */
function islandora_scholar_tombstone_page_build()
{
    drupal_add_js(drupal_get_path('module', 'islandora_scholar_tombstone') . '/js/islandora_scholar_tombstone.js');
    drupal_add_css(drupal_get_path('module', 'islandora_scholar_tombstone') . '/css/islandora_scholar_tombstone.css');
}

/**
 * Implements hook_page_alter().
 */
function islandora_scholar_tombstone_page_alter(&$page)
{
    $path = current_path();
    $path_alias = drupal_lookup_path('alias', $path);

    /**
     * This is where the functions check to see if on an object.
     * @var String
     *
     * This checks if page alias is 'currently_not_available' and if the embargo
     * is set.
     */
    if ($path_alias == 'currently_not_available') {
        dsm('Path alias matches');
    }

    // Unsets preview image. This belongs somewhere else.
    if (isset($page['content']['system_main']['citation.tab']['preview']['#path'])) {
        unset($page['content']['system_main']['citation.tab']['preview']['#path']);
    }

    module_load_include('inc', 'islandora_scholar_embargo', 'includes/utilities');
    $count = false;

    $current_embargo = <<<EOQ
    PREFIX is: <info:islandora/islandora-system:def/scholar#>
    SELECT ?obj ?date
    FROM <#ri>
        WHERE {
            ?obj is:embargo-until ?date
            }
EOQ;
    if ($count) {
        $current_embargo .= <<<EOQ
        ORDER BY ?obj
        }
EOQ;
    }
dsm($page);
    $connection = islandora_get_tuque_connection();
    $ri = $connection->repository->ri;
    $check_embargo = $ri->sparqlQuery($current_embargo, 'unlimited', '0');
    $object_embargoed = trim(current_path(), 'islandora/object');

    //  Looking to get the object's information and pipe it to line 160
    if (isset($check_embargo[0]['date']['value'])) {
        if(isset($page['content']['system_main']['citation.tab']['metadata']['#markup'])) {
          $temp_martkup = $page['content']['system_main']['citation.tab']['metadata']['#markup'];

          // Checks to see if this has been published by looking for the orid id exist.
          if(! strstr($temp_martkup, 'ORCID iD')) {

              // Injecting placeholder HTML into the object page.
              $newdetailslist = <<<EOT
dl xmlns:dcterms="http://purl.org/dc/terms/" class="islandora-inline-metadata islandora-metadata-fields">
        <dt class=" first">Title</dt>
        <dd class=" first">
            <p>Unavailable until published</p>
        </dd>
        <dt class="">Author(s)</dt>
        <dd class="">
            <p>Unavailable until published</p>
        </dd>
        <dt class="">...</dt>
        <dd class="">
            <p>...</p>
        </dd>
    </dl>
</fieldset
EOT;
          // Adds HTML to the details section.
          $page['content']['system_main']['citation.tab']['metadata']['#markup'] = preg_replace("</fieldset>", $newdetailslist, $temp_martkup);
        }
      }

        // Looks to see if the embargo is not indefinite.
        if ($check_embargo[0]['date']['value'] != 'indefinite') {
            $embargo_to_be_released = t(strtotime($check_embargo[0]['date']['value']));
            $embargo_to_be_released_string = t($check_embargo[0]['date']['value']);

            // If the embargo has expired.
            if ($_SERVER['REQUEST_TIME'] < $embargo_to_be_released) {
                if (isset($page['content']['system_main']['citation.tab']['suffix']['#markup'])) {
                    $page['content']['system_main']['citation.tab']['citation']['#suffix'] = '</span><div class="embargo-message"><h2>Embargo until ' . date('F jS Y', t(strtotime($check_embargo[0]['date']['value']))) . '</h2><p>This submission has been embargoed. The embargo with release on '.date('F jS Y h:i:s A (T)', t(strtotime($check_embargo[0]['date']['value']))).'</p></div>';
                }
                if (isset($page['content']['system_main']['citation.tab'])) {
                    if (! isset($page['content']['system_main']['citation.tab']['pdf_download']['#markup'])) {
                        $page['content']['system_main']['citation.tab']['pdf_download']['#markup'] = '<label>Downloads </label> <a id="embargoed_pdf_link" class="embargoed_link" href="#embargoed_pdf_link">PDF</a>';
                    }
                    if (! isset($page['content']['system_main']['citation.tab']['supplemental_download_0']['#markup'])) {
                        $page['content']['system_main']['citation.tab']['supplemental_download_0']['#markup'] = '<label>Supplemental Files </label><a id="embargoed_Suppl_link" class="embargoed_link" href="#">File(s)</a><br/><a class="embargoed_link" href="#">....</a>';
                    }
                }
            }
        } else {
            // Setting the withdrawn message.
            if (isset($page['content']['system_main']['citation.tab']['suffix']['#markup'])) {
                $page['content']['system_main']['citation.tab']['citation']['#markup'] = '<div class="csl-bib-body"><div style="text-indent: -25px; padding-left: 25px;"><div class="csl-entry"><div class="withdrawn-message"><h2>This has been withdrawn</h2><p>This submission was withdrawn and is no longer available.</p></div></div></div></div>';
                if (isset($page['content']['system_main']['citation.tab'])) {
                  if (! isset($page['content']['system_main']['citation.tab']['pdf_download']['#markup'])) {
                    $page['content']['system_main']['citation.tab']['pdf_download']['#markup'] = '<label>Downloads </label> <a id="embargoed_pdf_link" class="embargoed_link" href="#embargoed_pdf_link">PDF</a>';
                  }
                  if (! isset($page['content']['system_main']['citation.tab']['supplemental_download_0']['#markup'])) {
                    $page['content']['system_main']['citation.tab']['supplemental_download_0']['#markup'] = '<label>Supplemental Files </label><a id="embargoed_Suppl_link" class="embargoed_link" href="#">File(s)</a><br/><a class="embargoed_link" href="#">....</a>';
                  }
                }

            }
        }
    }
}


function islandora_scholar_tombstone_admin()
{
    $form = array();
    $form['islandora_scholar_tombstone_datastreams'] = array(
        '#type' => 'textfield',
        '#title' => t('Datastreams Required'),
        '#default_value' => variable_get('islandora_scholar_tombstone_datastreams'),
        '#description' => t("Give a list of datastreams to look for /n Examples: 'MODS','PDF' ."),
        '#required' => true,
    );
    return system_settings_form($form);
}
